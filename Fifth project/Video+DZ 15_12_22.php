<!-- Сообщаем браузеру как стоит обрабатывать эту страницу -->
<!DOCTYPE html>
<!-- Оболочка документа, указываем язык содержимого -->
<html lang="ru">
<!-- Заголовок страницы, контейнер для других важных данных (не отображается) -->
<head>
    <!-- Заголовок страницы в браузере -->
    <title>Повторение за видеоуроком</title>
    <!-- Подключаем CSS -->
    <link rel="stylesheet" href="../Fifth%20project%/style.css"
    <meta charset="UTF-8"
</head>
<!-- Отображаемое тело страницы -->
<body>
<?php
error_reporting(E_ALL);
ini_set('display_errors', 'on');
mb_internal_encoding('UTF-8');
?>

<h1>ФУНКЦИИ</h1>
<!--можем обращатья из любого места <программы-->
<h2> Function</h2>

<p>
    <?php
    function hello()
    {/* в ( ) тело функции, функции не чуствительны к регистру hello или HELLO это одна и та же функция*/
        echo "Hello,World";
    }

    hello(); /* место вызова функции*/
    ?>
</p>


<p>
    <?php
    function post($name)
    { /* function "название фунуции" ("параметры функции" несколько параметров отделяются запятыми)*/
        echo "Hello,$name!";
    }

    $name = 'Tom';
    post($name);
    echo '<br>';
    $name1 = 'Bob';
    post($name1);
    echo '<br>';
    $name2 = 5;
    post($name2);
    ?>
</p>
<!--передача нескольких параметров-->
<p>
    <?php
    function pesto($name, $age)
    {
        $city = "Moscow";/* локальная переменная не задана в функции и область видимости только в пределах данной функции */
        echo "Hello,my name is $name, age = $age. City-$city!";
    }

    $name = 'Tom';
    $age = 18;
    pesto($name, $age);
    echo '<br>';
    $name1 = 'Bob';
    pesto($name1, $age);
    echo '<br>';
    $name2 = 5;
    pesto($name2, 'восемнадцать'); /* можно вместо $age выставить просто возраст числовым значениием или буквенным*/
    ?>
</p>

<h2>ПРИМЕР</h2>

<p>
    <?php
    function rest($value1, $value2)
    {
        $result = 100;
        echo " ПРИВЕТ, МИР";
        echo '<br>';
        echo "Чего-$value1, Нам-$value2";
        return $result;
    }

    $value1 = 'того';
    $value2 = 'вам';
    rest($value1, $value2);
    ?>
</p>

<h2>Аргументы</h2>
<h3>параметры значения</h3>

<!--аругментом функции являлся параметр значение-->
<p>
    <?php
    function sum($a)
    {
        $a += 10;
        echo $a;
    }

    $b = 15;
    echo $b . '<br>';//выведет 15
    sum($b);// вернет значение 25
    echo '<br>';
    echo $b . '<br>'; // выведет 15
    ?>
</p>

<h3>параметры переменные</h3>
<!--аругментом функции являлся параметр переменные-->
<!--вот это все означает передача аргументов переменным-->
<p>
    <?php
    function sum1(&$a1) /*поставили перед параметром & */
    {
        $a1 += 10;
        echo $a1;
    }

    $b1 = 15;
    echo $b1 . '<br>';//выведет 15
    sum1($b1);// вернет значение 25
    echo '<br>';
    echo $b1 . '<br>'; // выведет 25
    ?>
</p>

<h2>ПРИМЕР:Передача аргументов по значению<</h2>
<?php
// передаем аргумент по значению
function inc(&$par)
{ /*поставли & меняется итоговое значение*/
    $par = $par + 10;
    echo "Локальная переменная = " . $par; // 15
    echo "<p>";
}

$var = 5;

// вызываем функцию
inc($var);
echo "Глобальная переменная = " . $var; // 5
?>

<h3>Параметры переменные</h3>
<!--PHP моджет сделать параметр необязательным и тогда значение
такого параметра должно быть по умолчанию-->

<p>
    <?php
    function pesto2($name2,/* $city, это пример*/ $age2 = 118)
        /* $age2 формать параметр=значение*//* всеп паракметры такого типа должны быть в конце самом*/
    {
        $city = "Moscow";/* локальная переменная не задана в функции и область видимости только в пределах данной функции */
        echo "Hello,my name is $name2, age = $age2. City-$city!";
    }

    $name2 = 'Tom';
    $age2 = 90;
    pesto2($name2); /*так как $age2 необязательный парамтр его можно вводить или не вводить*/
    echo '<br>';
    $name2 = 'Bob';
    pesto2($name2, $age2);
    echo '<br>';
    $name2 = 5;
    pesto2($name2, 'восемнадцать'); /* можно вместо $age выставить просто возраст числовым значениием или буквенным*/
    ?>
</p>

<p>
    <?php
    function sum2($a2 = 5)
    {
        echo $a2 . '<br>';
    }

    $b = 15;
    sum2();
    sum2($b);
    ?>
</p>

<h2>Передача аргументов переменной длины</h2>
<h3>Мои увлечения</h3>
<?php
// при определении функции говорим, что
// количество аргументов заранее неизвестно
function outHobby(...$args)
{ /* ... три точки перед $args говорят о том что это переменная длины*/
    // прверяем тип данных и значения аргумента
    echo "<pre>";
    var_dump($args);
    echo "</pre>";

    // выведем аргумент-массив в цикле
    foreach ($args as $value) {
        echo "<li> $value </li>";
    }
}

;

// вызов функции
outHobby("PHP", "Программирование", "CSS", "Bitrics", "HTML", "GIT");
?>


<h2>Функция с параметром типа массив</h2>
<?php
// передаем на вход некий массив
// пусть имя параметра-массива будет $arr
function outHobby1($arr)
{
    // проверяем тип данных и значения аргумента
    echo "<pre>";
    var_dump($arr);
    echo "</pre>";

    // выведем массив-аргумент в цикле
    foreach ($arr as $key => $val) {
        echo "Увлечение " . ++$key . " - " . $val . "<br/>";
    }
}

;

$hobby = ["PHP", "Программирование", "CSS", "Bitrics", "HTML"];

// вызов функции
outHobby1($hobby);
?>

<!--<h2>Пример параметр по умолчанию</h2>
<p>
    <?php
/*    function hallo2($user3 = 'client1')
    {
        echo match ($user3) {
            'client1' => 'Hello, client',
            'admin' => 'Hello, admin',
            'boss' => 'Hello, boss',
            default => ' Who are you?',
        }
    }
    */ ?>
</p>-->

<h2>RETURN функция</h2>

<p>
    <?php
    function sum4($a4)
    {
        $a4 += 10;
        return $a4;
    }

    $a = 20;
    $b = sum4($a);// значение 30
    echo $b;
    ?>
</p>


<h2>Возврат значений</h2>

<h3> Пример 1</h3>
<?php
// определение функции
function getCircleArea($radius)
{
    // задаем константу числа пи
    define("PI", 3.1415);
    $result = PI * $radius * $radius;
    // отдадим результат во внешнюю программу
    return $result;
}

// вызов функции, вывод результата в браузер
echo getCircleArea(5);
?>

<h3> Пример 2 </h3>

<?php
function add($a, $b)
{
    $sum = $a + $b;
    // есть оператор echo, но нет return
    return "Сумма = $sum <br />"; /*вместо echo напечатем return (то меняй значения и увидишь разницу результата)*/
}

// вызываем функцию, в которой нет return
$result = add(5, 6);
echo $result;
// проверяем, что возвращает такая функция
if ($result === null)
    echo "result равен Null";
else
    echo "result не равен Null";

?>

<h2>Анонимные функции</h2>

<h3>Без параметров</h3>

<p>
    <?php
    $greet = function () {
        echo " Привет, давайте изучать PHP ";
    };
    $greet();
    ?>
</p>

<h3>С параметрами</h3>

<p>
    <?php
    $greet1 = function ($par) { /* может принимать параметры как и обычная функция*/
        printf(" Привет, давайте изучать %s вместе! </p>", $par);
        /*printf возвращает отформатированнную строку, %s - вместо этого берется строка из второго аргумента $par */
    };
    $lang1 = "PHP";
    $lang2 = "Bitrics";
    $greet1($lang1);
    $greet1($lang2);

    ?>
</p>

<h2>Рекурсия</h2>
<!--это возмождность вызовва фукнкции самой в себе-->

<p>
    <?php
    function f($i)
    {
        if ($i <= 5) {
            echo $i . '<br>';
            f($i + 1);
        }
    }

    f(1);
    ?>
</p>

<p>
    <?php
    function f1($i1)
    {
        if ($i1 <= 5) {
            f1($i1 + 1); /* поменяли строчки местами*/
            echo $i1 . '<br>';
        }
    }

    f1(1);
    ?>
</p>


<h2> Задание слайд 15 </h2>
<h3> Задание 1</h3>
<!--Создать функцию, которая сравнивает два числа и возвращает наибольшее.-->


<p>
    <?php
    function a22($a, $b)
    {
        $a = 20;
        $b = 10;
        if($a > $b) {
            echo $a;
        } else {
            echo $b;
        }
    }

    ?>
</p>


</body>
</html>