<!-- Сообщаем браузеру как стоит обрабатывать эту страницу -->
<!DOCTYPE html>
<!-- Оболочка документа, указываем язык содержимого -->
<html lang="ru">
<!-- Заголовок страницы, контейнер для других важных данных (не отображается) -->
<head>
    <!-- Заголовок страницы в браузере -->
    <title>Повторение за видеоуроком 12.01.23 (OOP)</title>
    <!-- Подключаем CSS -->
    <link rel="stylesheet" href="../OOP/style.css"
    <meta charset="UTF-8"
</head>
<!-- Отображаемое тело страницы -->
<body>
<?php
error_reporting(E_ALL);
ini_set('display_errors', 'on');
mb_internal_encoding('UTF-8');
?>

<h1>ООП(объектно ориентированное программирование) </h1>

<?php
include 'People.php';/* подключили People класс*/
include 'Person.php'; /*подключили класс наслденик People->Person*/
/*есть возможность задать(проинициаизировать) переменные прям в классе*/
/*смотри файл People.php*/

$Tom = new People('Bob', 12); /*Объект данного класса, People*/
/* в скобках, когда объявляем экземпляр класса, обращаемся к конструктору  ('Bob',12)*/
//$Tom->name="Tom"; /* после того как мы его задали в классе People, мы можем его проинициализировать в файле*/
//$Tom->age = 13; /*этот аргумент работает когда класс PUBLIC, если выбрпать параметр PRIVATE или PROTECTED, то после -> выводиться age не будет*/
//$Tom->$surname /*так как это элемент класса People, то мы не можем придавать ему значение $surmane зи класса Person*/
/*значение закомментировал чтоб вывести значения из файла People.php*/
$Tom->go();
echo '<pre>';
var_dump($Tom);
echo '<pre>';

//$Bob= new People();
//$Bob->name="Bob";
//$Bob->age = 16;

//echo '<pre>';
//var_dump($Bob);
//echo '<pre>';
//$Bob->go(); /*выведет GO! обрщение к функции public function в файле People.php*/
//$age_new =$Bob->go(); /*новы строка с return, увеличение возраста на 1*/
//echo $age_new;

$same = new Person('Tom', 11,'Smith'); /*наследник Person наследует все классы родителя People*/
$same->name = 'Same';
//var_dump($same); /*закоментировали чтоб вывести методом go()*/
//$same->surname = 'Smith';/* surname у Tom нет этого свойства, а у same ecnm*/
$same->go();
?>

<h2>ЗАДНИЕ №1</h2>
<!--1. Создать класс животные 3 поля, 2 метода-->
<!--2. Создать 2 экземпляра класса, вызвать 3 поля и 2 метода-->
<?php

?>
<h2>НАСЛЕДОВАНИЕ, ИНКАПСУЛЯЦИЯ, ПОЛИМОРФИЗМ</h2>
<h3>НАСЛДЕОВАНИЕ</h3>
<!--Приобретает все своства и  методы от родителя-->
<p>Смотри пример Tom и $same в занятии!!!</p>
<h3>ИНКАПСУЛЯЦИЯ</h3>
<!--Механизм скрытия код от внешних выоздействий, пример автомобиль-двигатель-->
<p>Примером может служить сокрытие возраста в People, смотри People.php!!!</p>
<h3>ПОЛИМОРФИЗМ</h3>
<!--Это переопределение методов, единый интерфейс, но разная реализация, магазин и товары-->
<p>Смотри пример в классе Person.php подключение параметра surname!!!</p>

</body>
</html>